# AUTOGENERATED! DO NOT EDIT! File to edit: 02_inclinometers.ipynb (unless otherwise specified).

__all__ = ['construct_df_csv', 'drop_columns', 'update_type_date', 'rename_columns', 'add_column_up', 'df_multiindex',
           'run_computation_inklino']

# Cell
import pandas as pd
import numpy
import io
import csv
from datetime import datetime

from google.colab import files

from copy import copy

from datetime import timedelta
from datetime import datetime

import plotly.express as px
import plotly.graph_objects as go

import numpy as np

# Cell
def construct_df_csv(file_name):
  return pd.read_csv(file_name, delimiter=';')

# Cell
def drop_columns(df):

  to_drop = ['format_version',
             'site',
            #  'casing',
             'latitude', 'longitude', 'type',
             'direction', 'mode',
            #  'runs',
              'unit', 'step', 'length', 'azimuth',
              'site_description', 'tube_description', 'os', 'manufacturer', 'model',
              'type2', 'version', 'type3', 'serial', 'firmware', 'T', 'H', 'B', 'V',
              'P', 'serial4', 'firmware5', 'hardware', 'unit6', 'factor',
              'calibration', 'number', 'reference',
            #  'date',
              'delay', 'notes',
            #  'type7',
              'steps', 'number8',
            #  'depth',
              #  'A', 'B9',
              #  'T10',
              'H11', 'V12', 'S']

  df = df.drop(to_drop, 1)

  return df

# Cell
def update_type_date(df):

  str_days = [date.split('T')[0] for date in df['date']] #On conserve uniqument les jours

  dateFormatter = "%Y-%m-%d"

  df['date'] = [datetime.strptime(day, dateFormatter) for day in str_days]

  return df

# Cell
def rename_columns(df):
  df = df.rename(columns={'B9': 'B',
                          'T10': 'temp',
                          'casing': 'tube'})
  return df

# Cell
def add_column_up(df):
  #valeur + <--> A1B1
  df['info value'] = numpy.where(df['type7'] == 'A1B1', '+', '-')
  df = df.drop(['type7','runs'], 1)
  return df

# Cell
def df_multiindex(df):
  df_pivot = df.pivot(index=['date','tube','depth'], columns=['info value'],
                      values=['A', 'B'])
  return df_pivot

# Cell
def run_computation_inklino(inklino_file_name):
  """
  Fonction de computation des mesures inclino
  """
  # Importation sous df du fichier
  df_inklino = construct_df_csv(inklino_file_name)

  # Fonctions de traitement
  df_inklino = drop_columns(df_inklino)
  df_inklino = update_type_date(df_inklino)
  df_inklino = rename_columns(df_inklino)

  df_inklino = add_column_up(df_inklino)

  # Fonction pivot
  df_inklino = df_multiindex(df_inklino)

  return df_inklino